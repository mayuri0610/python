"""
Django settings for partment project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
# from decouple import config
from datetime import timedelta
import os
from .secret import *

# secret_data=Secreate()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = secret_data['SECRET_KEY_DEV']
SECRET_KEY= "django-insecure-3xzc7!hsm0(_%i#s6mh@peadl&&ww&0q6iofna$x3%^8+j4=x^"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#DEBUG = False

ALLOWED_HOSTS = ['*']
CSRF_TRUSTED_ORIGINS = [
                        "https://devapi.partment.co",
                        "https://stagingapi.partment.co",
                        ]

CORS_ALLOWED_ORIGINS = [

    "http://localhost:3000",
    "http://localhost:3001",
    "http://127.0.0.1:3000",
    "https://devadmin.partment.co/",
    "https://dev.partment.co/",
    "https://stagingadmin.partment.co/",
    "https://stagingfront.partment.co/",
]

SITE_URL ='https://devadmin.partment.co'
USER_URL ='https://dev.partment.co'
AUTH_USER_MODEL = 'customadmin.CustomUser'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework.authtoken',
    'rest_framework',
    'drf_yasg',
    'customadmin',
    'api',
    'api_common',
    'web',
    'properties',
    'user',
    'referral',
    'apps.masterapp',
    'apps.propertyapp',
    'apps.bookingapp',
    'apps.userapp',
]




MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_otp.middleware.OTPMiddleware',
   
   
] 


ROOT_URLCONF = 'partment.urls'

WSGI_APPLICATION = 'partment.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': config('DATABASE_NAME'),
#         'USER': config('DATABASE_USER'),
#         'PASSWORD': config('DATABASE_PASSWORD'),
#         'HOST': config('HOST'),
#         'PORT': config('PORT')
#     }
# }




# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': secret_data['DATABASE_NAME_DEV'],
#         'USER': secret_data['DATABASE_USER_DEV'],
#         'PASSWORD': secret_data['DATABASE_PASSWORD_DEV'],
#         'HOST': secret_data['HOST_DEV'],
#         'PORT': secret_data['PORT_DEV']
#     }
# }


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
MEDIA_DIR = Path.joinpath(BASE_DIR,'media')


# Media Files -  User Uploaded files
MEDIA_ROOT = MEDIA_DIR
MEDIA_URL = 'media/'
# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# code key
# FERNET_KEY = secret_data['FERNET_KEY_DEV']

# Email config

# EMAIL_BACKEND = secret_data['EMAIL_BACKEND_DEV']
# EMAIL_HOST = secret_data['EMAIL_HOST_DEV']
# EMAIL_HOST_USER = secret_data['EMAIL_HOST_USER_DEV']
# EMAIL_HOST_PASSWORD = secret_data['EMAIL_HOST_PASSWORD_DEV']
# EMAIL_PORT = secret_data['EMAIL_PORT_DEV']
# EMAIL_USE_TLS = True
# DEFAULT_FROM_EMAIL = secret_data['DEFAULT_FROM_EMAIL_DEV']

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = "smtp.gmail.com"
# EMAIL_HOST_USER = 'testpartment1@gmail.com'
# EMAIL_HOST_PASSWORD = 'otsignjbraetxtre'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# DEFAULT_FROM_EMAIL='testpartment1@gmail.com'
ADMIN_EMAIL='aruna@leocoders.com'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    # 'DEFAULT_RENDERER_CLASSES': ('rest_framework.renderers.JSONRenderer',)
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    'JTI_CLAIM': 'jti',
}


SWAGGER_SETTINGS = {
   'USE_SESSION_AUTH': False
}

#payment gateway settings
# API_SECRATE=secret_data['API_SECRATE_DEV']
# SITEID=secret_data['SITEID_DEV']
API_SECRATE= ""
SITEID = ""

PAYMENTBASEURL='https://api.subsbase.io'

MAX_UPLOAD_SIZE = "5242880"

HUBSPOT_ACCESS_TOKEN = ""
HUBSPOTBASEURL = 'https://api.hubapi.com'  #new added
# ============================

# AWS_ACCESS_KEY_ID = secret_data['AWS_ACCESS_KEY_ID']
# AWS_SECRET_ACCESS_KEY = secret_data['AWS_SECRET_ACCESS_KEY']
# AWS_STORAGE_BUCKET_NAME = secret_data['AWS_STORAGE_BUCKET_NAME']
# AWS_S3_REGION_NAME = secret_data['AWS_S3_REGION_NAME']
# AWS_S3_FILE_OVERWRITE = False
# AWS_DEFAULT_ACL =  None
# AWS_S3_VERITY = True
# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'